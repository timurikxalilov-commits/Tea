from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    filters, ContextTypes, ConversationHandler
)
import asyncio
import random

# üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
MASTER_CHAT_ID = 5225197085
TOKEN = "7436013012:AAFmxpR03fQC_VOj_pWKhyfaK43FohaPNoE"

# üìÇ –°–æ—Å—Ç–æ—è–Ω–∏—è
NAME, DATE, PLACE, COMMENTS, PHONE, NOTE, REMIND = range(7)

# üçµ –¶–∏—Ç–∞—Ç—ã
tea_quotes = [
    "–ß–∞–π ‚Äî —ç—Ç–æ —Ç–∏—à–∏–Ω–∞, –∑–∞–≤—ë—Ä–Ω—É—Ç–∞—è –≤ –∞—Ä–æ–º–∞—Ç.",
    "–ü–µ–π —á–∞–π —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å –ø—É—Å—Ç–æ—Ç–æ–π.",
    "–í–æ–¥–∞ –∑–Ω–∞–µ—Ç –ø—É—Ç—å, —á–∞–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—É—Ç—å.",
    "–ù–∞—Å—Ç–æ—è—â–∏–π –≤–∫—É—Å —á–∞—è ‚Äî —ç—Ç–æ –≤–∫—É—Å —Ç–≤–æ–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è.",
    "–ß–∞—à–∫–∞ —á–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Ü–µ–ª–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π.",
    "–ß–∞–π ‚Äî –Ω–µ –Ω–∞–ø–∏—Ç–æ–∫. –≠—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä —Å –¥—É—Ö–æ–º –≤—Ä–µ–º–µ–Ω–∏.",
    "–í—Ä–µ–º—è –∑–∞–º–µ–¥–ª—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø—å—ë—à—å —Ö–æ—Ä–æ—à–∏–π —á–∞–π.",
    "–ù–µ —Å–ø–µ—à–∏. –ì–æ—Ä—è—á–∞—è –≤–æ–¥–∞ –ª—é–±–∏—Ç —Ç–µ—Ä–ø–µ–Ω–∏–µ.",
    "–ö–∞–∂–¥–∞—è –ø—å—è–ª–∫–∞ ‚Äî –∫–∞–∫ –ø–µ—Ä–≤–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ.",
    "–ß–∞–π ‚Äî —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ —Ä–∞—Å—Ç–≤–æ—Ä—è—Ç—å—Å—è –≤ –ø—Ä–æ—Å—Ç–æ–º.",
    # –î–æ–±–∞–≤—å —Å–≤–æ–∏ –¥–æ 100...
]

# üü¢ –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üßò –û –ø—Ä–∞–∫—Ç–∏–∫–µ", "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"],
        ["üçµ –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è –æ—Ç —á–∞–π–Ω–æ–≥–æ –ø—å—è–Ω–∏—Ü—ã"],
        ["‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", "üíå –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∫—É"],
        ["ü§ù –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"]
    ]
    await update.message.reply_text(
        "üõ†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ *¬´–ì–≤–æ–∑–¥–∏ –∏ –õ–∏—Å—Ç—å—è¬ª* üçÉ\n\n"
        "üî© –°—Ç–æ—è–Ω–∏–µ –Ω–∞ –≥–≤–æ–∑–¥—è—Ö\n"
        "üçµ –ß–∞–π–Ω—ã–µ —Ü–µ—Ä–µ–º–æ–Ω–∏–∏\n"
        "üíÜ –ë–∞–Ω–∫–∏\n"
        "üèï –í—ã–µ–∑–¥–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –ø—Ä–∏—Ä–æ–¥–µ\n\n"
        "üëá –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
        parse_mode="Markdown"
    )
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—É –æ –∑–∞–ø—É—Å–∫–µ
    user = update.effective_user
    await context.bot.send_message(MASTER_CHAT_ID, f"üë§ @{user.username or '–ë–µ–∑ –Ω–∏–∫–∞'} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")

# üåø –û –ø—Ä–∞–∫—Ç–∏–∫–µ
async def practice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üåø ¬´–ì–≤–æ–∑–¥–∏ –∏ –õ–∏—Å—Ç—å—è¬ª ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–µ–±–µ:\n\n"
        "üî© –°—Ç–æ—è–Ω–∏–µ –Ω–∞ –≥–≤–æ–∑–¥—è—Ö ‚Äî –ø—Ä–∞–∫—Ç–∏–∫–∞ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –ø—Ä–∏–Ω—è—Ç–∏—è\n"
        "üçµ –ß–∞–π ‚Äî –∫–∞–∫ —Ä–∏—Ç—É–∞–ª —Ç–∏—à–∏–Ω—ã –∏ –≤–∫—É—Å–∞\n"
        "üí® –î—É—à–µ–≤–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏\n"
        "üíÜ –ë–∞–Ω–∫–∏ ‚Äî –±–µ—Ä–µ–∂–Ω–∞—è —Ç–µ–ª–µ—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n"
        "üèï –í—ã–µ–∑–¥—ã –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É ‚Äî —Ü–µ—Ä–µ–º–æ–Ω–∏–∏ –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º"
    )

# üìÖ –ó–∞–ø–∏—Å—å
async def sign_up(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text
    await update.message.reply_text("–ö–æ–≥–¥–∞ —É–¥–æ–±–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–µ—Å—Å–∏—é? (–¥–∞—Ç–∞/–≤—Ä–µ–º—è)")
    return DATE

async def get_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['date'] = update.message.text
    await update.message.reply_text("–ì–¥–µ –ø—Ä–æ–≤–µ—Å—Ç–∏? (–¥–æ–º–∞, –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ –∏–ª–∏ —É –º–µ–Ω—è?)")
    return PLACE

async def get_place(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['place'] = update.message.text
    await update.message.reply_text("–ï—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –º—ã—Å–ª–∏?")
    return COMMENTS

async def get_comments(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['comments'] = update.message.text
    await update.message.reply_text("–ò –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ üì±")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['phone'] = update.message.text
    user = update.message.from_user
    text = (
        f"üì• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\n"
        f"üë§ –ò–º—è: {context.user_data['name']}\n"
        f"üìÖ –ö–æ–≥–¥–∞: {context.user_data['date']}\n"
        f"üìç –ì–¥–µ: {context.user_data['place']}\n"
        f"üí¨ –ú—ã—Å–ª–∏: {context.user_data['comments']}\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}\n"
        f"Telegram: @{user.username or '–Ω–µ—Ç'}"
    )
    await context.bot.send_message(MASTER_CHAT_ID, text, parse_mode="Markdown")
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ, —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π üôå")
    return ConversationHandler.END

# üíå –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∫—É
async def note_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Å—Ç–∞–≤—å –∑–∞–ø–∏—Å–∫—É, –∏ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–∞ –ª–∏—á–Ω–æ üì¨")
    return NOTE

async def receive_note(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    msg = f"üì© *–ó–∞–ø–∏—Å–∫–∞ –æ—Ç @{user.username or '–∞–Ω–æ–Ω–∏–º'}:*\n\n{update.message.text}"
    await context.bot.send_message(MASTER_CHAT_ID, msg, parse_mode="Markdown")
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ, –∑–∞–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ üôè")
    return ConversationHandler.END

# ‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
async def reminder_set(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –Ω–∞–ø–æ–º–Ω–∏—Ç—å —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –≤—ã–¥–æ—Ö –∏–ª–∏ –ø–æ–ø–∏—Ç—å —á–∞–π? üçµ")
    return REMIND

async def send_later(chat_id, delay, bot):
    await asyncio.sleep(delay)
    await bot.send_message(chat_id=chat_id, text="üçµ –í—Ä–µ–º—è –Ω–∞ —á–∞–π –∏–ª–∏ –≥–ª—É–±–æ–∫–∏–π –≤—ã–¥–æ—Ö ‚òÅÔ∏è")

async def reminder_wait(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        m = int(update.message.text)
        await update.message.reply_text(f"‚è≥ –•–æ—Ä–æ—à–æ, –Ω–∞–ø–æ–º–Ω—é —á–µ—Ä–µ–∑ {m} –º–∏–Ω—É—Ç üçµ")
        asyncio.create_task(send_later(update.effective_chat.id, m * 60, context.bot))
    except:
        await update.message.reply_text("–£–∫–∞–∂–∏ —á–∏—Å–ª–æ –º–∏–Ω—É—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üôè")
    return ConversationHandler.END

# üçµ –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è
async def tea_quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    quote = random.choice(tea_quotes)
    await update.message.reply_text(f"üßô‚Äç‚ôÇÔ∏è –ß–∞–π–Ω—ã–π –ø—å—è–Ω–∏—Ü–∞ –≥–æ–≤–æ—Ä–∏—Ç:\n\n‚Äú{quote}‚Äù")

# ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ
async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–µ –ø–æ–Ω—è–ª —Ç–µ–±—è üôÉ –õ—É—á—à–µ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ")

# ‚ñ∂Ô∏è MAIN
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))

    # –ó–∞–ø–∏—Å—å
    app.add_handler(ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è") | filters.Regex("üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"), sign_up)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_date)],
            PLACE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_place)],
            COMMENTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_comments)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
        },
        fallbacks=[]
    ))

    # –ó–∞–ø–∏—Å–∫–∞
    app.add_handler(ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("üíå –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∫—É"), note_entry)],
        states={NOTE: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_note)]},
        fallbacks=[]
    ))

    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    app.add_handler(ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ"), reminder_set)],
        states={REMIND: [MessageHandler(filters.TEXT & ~filters.COMMAND, reminder_wait)]},
        fallbacks=[]
    ))

    app.add_handler(MessageHandler(filters.Regex("üßò –û –ø—Ä–∞–∫—Ç–∏–∫–µ"), practice))
    app.add_handler(MessageHandler(filters.Regex("üçµ –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è –æ—Ç —á–∞–π–Ω–æ–≥–æ –ø—å—è–Ω–∏—Ü—ã"), tea_quote))
    app.add_handler(MessageHandler(filters.Regex("ü§ù –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"), lambda u, c: u.message.reply_text(
        "üíö –•–æ—á–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç?\n\nüì≤ –ü–µ—Ä–µ–≤–æ–¥: *+7 912 852-81-81*\n_–°–±–µ—Ä–±–∞–Ω–∫ / –¢-–ë–∞–Ω–∫_\n\n–∏–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏ –Ω–∞ —á–∞–π–Ω—É—é —Ü–µ—Ä–µ–º–æ–Ω–∏—é üêâ",
        parse_mode="Markdown"
    )))

    app.add_handler(MessageHandler(filters.COMMAND, unknown))
    app.add_handler(MessageHandler(filters.TEXT, unknown))

    app.run_polling()

if __name__ == "__main__":
    main()
